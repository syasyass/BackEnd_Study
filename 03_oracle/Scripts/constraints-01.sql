DROP TABLE TABLE_CHECK;
CREATE TABLE TABLE_CHECK (
	LOGIN_ID VARCHAR2(20) CONSTRAINT TBLCK_LGNID_PK PRIMARY KEY,
	LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLCK_LGNPW_CK
							CHECK(LENGTH(LOGIN_PWD) > 3),
	TEL VARCHAR2(20)
);
SELECT * FROM TABLE_CHECK;

-- CHECK 제약 조건에 맞지 않는 예
INSERT INTO TABLE_CHECK
VALUES('TEST_ID', '123', '010-1234-5678');

-- CHECK 제약 조건에 맞는 예
INSERT INTO TABLE_CHECK
VALUES('TEST_ID', '1234', '010-1234-5678');

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME LIKE 'TABLE_CHECK';

DROP TABLE TABLE_DEFAULT;
CREATE TABLE TABLE_DEFAULT (
	LOGIN_ID VARCHAR2(20) CONSTRAINT TBLCK2_LGNID_PK PRIMARY KEY,
	LOGIN_PWD VARCHAR2(20) DEFAULT '1234',
	REG_DATE DATE DEFAULT SYSDATE,
	UPDATE_DATE DATE,
	TEL VARCHAR2(20)
);
SELECT * FROM TABLE_DEFAULT;

-- DEFAULT 테스트. 아예 값을 넣지 않아야 함. NULL은 NULL이 들어감.
INSERT INTO TABLE_DEFAULT(LOGIN_ID, UPDATE_DATE, TEL)
VALUES('TEST_ID', TO_DATE('2002/01/01', 'YYYY/MM/DD'),'010-1234-5678');

-- 객체 종류, 객체 보기 // 데이터 사전
SELECT * FROM DICT;

SELECT * FROM DICTIONARY;

SELECT TABLE_NAME FROM USER_TABLES;

SELECT OWNER, TABLE_NAME FROM ALL_TABLES;

-- INDEX
SELECT * FROM USER_INDEXES;

SELECT * FROM USER_IND_COLUMNS;

CREATE INDEX IDX_EMP_SAL
			ON EMP(SAL);
		
SELECT * FROM USER_IND_COLUMNS;

DROP INDEX IDX_EMP_SAL;

-- VIEW. 만약 생성이 안 되면 뷰 생성 권한을 받아야 함
-- GRANT CREATE VIEW TO SCOTT;
CREATE VIEW VW_EMP20
AS (SELECT EMPNO, ENAME, JOB, DEPTNO
	FROM EMP
	WHERE DEPTNO = 20);
SELECT * FROM VW_EMP20;

SELECT * FROM USER_VIEWS;

SELECT ROWNUM, E.* FROM EMP E
ORDER BY SAL;

SELECT ROWNUM, E.*
FROM (SELECT *
	FROM EMP E
	ORDER BY SAL DESC) E;

SELECT ROWNUM, E.*
FROM (SELECT *
	FROM EMP E
	ORDER BY SAL DESC) E
WHERE ROWNUM <= 3; -- <, <=만 지원함. >나 BETWEEN~AND는 지원 안 함.

CREATE VIEW EMP_SAL_RANK
AS
	SELECT ROW_NUMBER() OVER(ORDER BY SAL DESC) SEQ, E.*
	FROM EMP E;

-- VIEW를 만들어두면 BETWEEN~AND 등의 명령어 사용 가능
SELECT * FROM EMP_SAL_RANK
WHERE SEQ BETWEEN 1 AND 3;

SELECT * FROM EMP_SAL_RANK
WHERE SEQ BETWEEN 4 AND 4+2;

SELECT * FROM EMP_SAL_RANK
WHERE SEQ > 5;

-- SAL로 내림차순 정렬
-- SEQ, EMPNO, EMPNAME, DEPTNO, DNAME을 가지는 뷰 생성
CREATE OR REPLACE VIEW EMP_DETAIL
AS
	SELECT
		ROW_NUMBER() OVER(ORDER BY SAL DESC) SEQ,
		E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME
	FROM EMP E JOIN DEPT D ON(E.DEPTNO = D.DEPTNO);

SELECT * FROM EMP_DETAIL
WHERE SEQ BETWEEN 5 AND 10;

-- 시퀀스 생성, 제약조건은 복사되지 않음
CREATE TABLE DEPT_SEQUENCE
AS SELECT * FROM DEPT WHERE 1<>1;

-- 시퀀스 값이 가득 차서 바꾸고 싶으면 DROP하고 다시 만들거나, 옵션을 수정해야 함
CREATE SEQUENCE SEQ_DEPT_SEQUENCE
	INCREMENT BY 10
	START WITH 10
	MAXVALUE 90
	MINVALUE 0
	NOCYCLE
	CACHE 2;

SELECT * FROM USER_SEQUENCES;

INSERT INTO DEPT_SEQUENCE(DEPTNO, DNAME, LOC)
VALUES(SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL
FROM DUAL;

-- 시퀀스 조건 변경
ALTER SEQUENCE SEQ_DEPT_SEQUENCE
	INCREMENT BY 3
	MAXVALUE 99
	CYCLE;

-- 시퀀스 삭제
DROP SEQUENCE SEQ_DEPT_SEQUENCE;


